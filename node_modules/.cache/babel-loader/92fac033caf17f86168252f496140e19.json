{"ast":null,"code":"var _jsxFileName = \"/home/madalina/Desktop/me/3.React/2.react-app-students-blog/src/components/list.js\",\n    _s = $RefreshSig$();\n\nimport Student from './student';\nimport studentsListData from '../data/students-list';\nimport Subtitle from './subtitle';\nimport Button from './button';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction List() {\n  _s();\n\n  const [blackText, setBlackText] = useState(false);\n\n  const toggleColor = () => {\n    if (blackText === true) {\n      setBlackText(false);\n    } else {\n      setBlackText(true);\n    }\n  };\n\n  const [showStudentList, setStudentList] = useState(false);\n\n  const setStudentListHandler = () => {\n    showStudentList ? setStudentList(false) : setStudentList(true);\n  };\n\n  let proxy = [];\n\n  if (showStudentList === true) {\n    proxy = studentsListData;\n  } else {\n    proxy = [];\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      changeColor: toggleColor,\n      buttonName: \"Toggle color\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      changeColor: setStudentListHandler,\n      buttonName: \"Show students\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), proxy.map(dateStudent => /*#__PURE__*/_jsxDEV(Student, {\n      data: dateStudent,\n      blackColor: blackText,\n      age: \"23\",\n      toggleColor: toggleColor\n    }, dateStudent.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_s(List, \"AI57IKFv/ULBruq+PXNmcXcsnBI=\");\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/home/madalina/Desktop/me/3.React/2.react-app-students-blog/src/components/list.js"],"names":["Student","studentsListData","Subtitle","Button","React","useState","List","blackText","setBlackText","toggleColor","showStudentList","setStudentList","setStudentListHandler","proxy","map","dateStudent","id"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,WAApB;AACA,OAAOC,gBAAP,MAA6B,uBAA7B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;AAGA,SAASC,IAAT,GAAgB;AAAA;;AACZ,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMI,WAAW,GAAG,MAAM;AACtB,QAAIF,SAAS,KAAK,IAAlB,EAAwB;AACpBC,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KAFD,MAEO;AACHA,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACH;AACJ,GAND;;AAQA,QAAM,CAACE,eAAD,EAAkBC,cAAlB,IAAoCN,QAAQ,CAAC,KAAD,CAAlD;;AAEA,QAAMO,qBAAqB,GAAG,MAAM;AAC5BF,IAAAA,eAAe,GAAGC,cAAc,CAAC,KAAD,CAAjB,GAA2BA,cAAc,CAAC,IAAD,CAAxD;AACH,GAFL;;AAIA,MAAIE,KAAK,GAAG,EAAZ;;AAEA,MAAIH,eAAe,KAAK,IAAxB,EAA8B;AAC1BG,IAAAA,KAAK,GAAGZ,gBAAR;AACH,GAFD,MAEO;AACHY,IAAAA,KAAK,GAAG,EAAR;AACH;;AAGD,sBACI;AAAA,4BAEI,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAEJ,WAArB;AAAkC,MAAA,UAAU,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAEG,qBAArB;AAA4C,MAAA,UAAU,EAAC;AAAvD;AAAA;AAAA;AAAA;AAAA,YAHJ,EAMQC,KAAK,CAACC,GAAN,CAAYC,WAAD,iBAEP,QAAC,OAAD;AAEI,MAAA,IAAI,EAAEA,WAFV;AAGI,MAAA,UAAU,EAAER,SAHhB;AAII,MAAA,GAAG,EAAC,IAJR;AAKI,MAAA,WAAW,EAAEE;AALjB,OACSM,WAAW,CAACC,EADrB;AAAA;AAAA;AAAA;AAAA,YAFJ,CANR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH;;GA/CQV,I;;KAAAA,I;AAiDT,eAAeA,IAAf","sourcesContent":["import Student from './student'\nimport studentsListData from '../data/students-list'\nimport Subtitle from './subtitle'\nimport Button from './button'\nimport React, {useState} from 'react'\n\n\nfunction List() {\n    const [blackText, setBlackText] = useState(false);\n\n    const toggleColor = () => {\n        if (blackText === true) {\n            setBlackText(false);\n        } else {\n            setBlackText(true);\n        }\n    }\n\n    const [showStudentList, setStudentList] = useState(false);\n    \n    const setStudentListHandler = () => {\n            showStudentList ? setStudentList(false) : setStudentList(true);\n        }\n\n    let proxy = [];\n\n    if (showStudentList === true) {\n        proxy = studentsListData\n    } else {\n        proxy = [];\n    }\n        \n\n    return (\n        <div>\n                      \n            <Button changeColor={toggleColor} buttonName=\"Toggle color\"/>\n            <Button changeColor={setStudentListHandler} buttonName=\"Show students\"/>\n            \n            {\n                proxy.map( (dateStudent) =>\n                (\n                    <Student\n                        key={dateStudent.id}\n                        data={dateStudent}\n                        blackColor={blackText}\n                        age='23'\n                        toggleColor={toggleColor}\n                    />\n                )\n                )\n            }\n        </div>\n    )\n}\n\nexport default List;"]},"metadata":{},"sourceType":"module"}