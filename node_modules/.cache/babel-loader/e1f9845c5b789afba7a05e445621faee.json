{"ast":null,"code":"var _jsxFileName = \"/home/madalina/git-MadalinaJerca/3.React-Projects/2.react-students-blog/src/components/4.student.js\";\nimport Button from './3.button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Student(props) {\n  const age = () => {\n    return Math.floor(Math.random() * 100 + 1);\n  };\n\n  return (\n    /*#__PURE__*/\n    // 3. Works with method 3 in list.js\n    // VARIANTA 1\n    _jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: props.isBlack ? {\n          color: 'black'\n        } : {\n          color: props.data.color\n        },\n        children: [props.data.firstName, \" \", props.data.lastName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Course: \", props.data.course]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email:\", props.data.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Age: \", age()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        click: props.toggleColor,\n        buttonTitle: \"Toggle Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_c = Student;\nexport default Student;\n/* MAI MULTE VARIANTE DE REZOLVARE A EXERCITIULUI */\n// VARIANTA 2 \n// let  currentColor = null;\n// if (props.isBlack === true) {\n//    currentColor = 'black';\n// } else {\n//    currentColor = props.data.color;\n// }\n// const age = () => {\n//   return Math.floor(Math.random() * 100 + 1);\n// }\n// return (\n//   // 3. Works with method 3 in list.js\n//   // VARIANTA 2 | REACT\n//   <div className=\"card\">\n//     <h1 style=\n//       {{color: currentColor}}>\n//       {props.data.firstName} {props.data.lastName}</h1>\n//       <h3>Course: {props.data.course}</h3>\n//       <p>Email:{props.data.email}</p>\n//       <p>Age: {age()}</p>\n//       <Button  changeColor={props.toggleColor} buttonName=\"Toggle Name\"/>\n//   </div>    \n// 2. Works with method 2.1 and 2.2 in list.js\n// <div className=\"card\">\n//   <h1>{props.firstName} {props.lastName}</h1>\n//   <h3>Course: {props.course}</h3>\n//   <p>Email:{props.email}</p>\n//   <p>Age: {props.age}</p>\n// </div>\n// 1. Hardcoded Works with method 1 in list.js\n// <div className='card'> \n//   <h1>Martin Randolph</h1>\n//   <h3>Course: Frontend</h3>\n//   <p>Email: martin.randolph@gmail.com</p>\n// </div> \n// cum stie studentul ce state are valoarea blackText\n// cand apelam componenta student ii dam variabila blackText \n// si o verificam aici in fisierul students.\n// linia 26, am trimis un parametru prin care i-am dat numele \n// iar in componenta de buton, accepti parametrul ala si oriunde e plasata se randeaza cu \n// numele pe care l-ai dat tu.\n\nvar _c;\n\n$RefreshReg$(_c, \"Student\");","map":{"version":3,"sources":["/home/madalina/git-MadalinaJerca/3.React-Projects/2.react-students-blog/src/components/4.student.js"],"names":["Button","Student","props","age","Math","floor","random","isBlack","color","data","firstName","lastName","course","email","toggleColor"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,YAAnB;;;AAGA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAEtB,QAAMC,GAAG,GAAG,MAAM;AAChB,WAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAAhB,GAAsB,CAAjC,CAAP;AACD,GAFD;;AAIA;AAAA;AACE;AACA;AACA;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAI,QAAA,KAAK,EACLJ,KAAK,CAACK,OAAP,GACD;AAAEC,UAAAA,KAAK,EAAE;AAAT,SADC,GAED;AAAEA,UAAAA,KAAK,EAAEN,KAAK,CAACO,IAAN,CAAWD;AAApB,SAHF;AAAA,mBAIGN,KAAK,CAACO,IAAN,CAAWC,SAJd,OAI0BR,KAAK,CAACO,IAAN,CAAWE,QAJrC;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAOI;AAAA,+BAAaT,KAAK,CAACO,IAAN,CAAWG,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,eASI;AAAA,6BAAUV,KAAK,CAACO,IAAN,CAAWI,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ,eAWI;AAAA,4BAASV,GAAG,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ,eAaI,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAED,KAAK,CAACY,WAArB;AAAkC,QAAA,WAAW,EAAC;AAA9C;AAAA;AAAA;AAAA;AAAA,cAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAHF;AAmBD;;KAzBQb,O;AA2BT,eAAeA,OAAf;AA0BA;AACE;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAME;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAKJ;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import Button from './3.button'\n\n\nfunction Student(props) {\n  \n  const age = () => {\n    return Math.floor(Math.random() * 100 + 1);\n  }\n\n  return (\n    // 3. Works with method 3 in list.js\n    // VARIANTA 1\n    <div className=\"card\">\n      <h1 style=\n        {(props.isBlack) ?\n        { color: 'black' } :\n        { color: props.data.color }}>\n        {props.data.firstName} {props.data.lastName}</h1> \n        \n        <h3>Course: {props.data.course}</h3>\n        \n        <p>Email:{props.data.email}</p>\n        \n        <p>Age: {age()}</p>\n        \n        <Button click={props.toggleColor} buttonTitle=\"Toggle Name\" />\n    </div>\n  );\n}\n\nexport default Student;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/* MAI MULTE VARIANTE DE REZOLVARE A EXERCITIULUI */\n  // VARIANTA 2 \n  // let  currentColor = null;\n\n  // if (props.isBlack === true) {\n  //    currentColor = 'black';\n  // } else {\n  //    currentColor = props.data.color;\n  // }\n\n  // const age = () => {\n  //   return Math.floor(Math.random() * 100 + 1);\n  // }\n  // return (\n  //   // 3. Works with method 3 in list.js\n  //   // VARIANTA 2 | REACT\n  //   <div className=\"card\">\n  //     <h1 style=\n  //       {{color: currentColor}}>\n  //       {props.data.firstName} {props.data.lastName}</h1>\n        \n      \n  //       <h3>Course: {props.data.course}</h3>\n  //       <p>Email:{props.data.email}</p>\n  //       <p>Age: {age()}</p>\n  //       <Button  changeColor={props.toggleColor} buttonName=\"Toggle Name\"/>\n  //   </div>    \n\n\n    \n\n\n    // 2. Works with method 2.1 and 2.2 in list.js\n    // <div className=\"card\">\n    //   <h1>{props.firstName} {props.lastName}</h1>\n    //   <h3>Course: {props.course}</h3>\n    //   <p>Email:{props.email}</p>\n    //   <p>Age: {props.age}</p>\n    // </div>\n\n\n\n\n\n    // 1. Hardcoded Works with method 1 in list.js\n    // <div className='card'> \n    //   <h1>Martin Randolph</h1>\n    //   <h3>Course: Frontend</h3>\n    //   <p>Email: martin.randolph@gmail.com</p>\n    // </div> \n\n    \n\n    \n// cum stie studentul ce state are valoarea blackText\n// cand apelam componenta student ii dam variabila blackText \n// si o verificam aici in fisierul students.\n// linia 26, am trimis un parametru prin care i-am dat numele \n// iar in componenta de buton, accepti parametrul ala si oriunde e plasata se randeaza cu \n// numele pe care l-ai dat tu."]},"metadata":{},"sourceType":"module"}